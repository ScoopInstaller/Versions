{
    "version": "b5415",
    "description": "Inference of LLaMA model in pure C/C++ (OpenCL for Adreno GPUs on ARM64)",
    "homepage": "https://github.com/ggml-org/llama.cpp",
    "license": "MIT",
    "architecture": {
        "64bit": {
            "url": "https://github.com/ggml-org/llama.cpp/releases/download/b5415/llama-b5415-bin-win-opencl-adreno-arm64.zip",
            "hash": "51b3fcac8f01cc24bdac3108a433b2c204c6207dc3516d51a7c4fc72551ea5bc"
        }
    },
    "bin": [
        "llama-batched-bench.exe",
        "llama-batched.exe",
        "llama-bench.exe",
        "llama-cli.exe",
        "llama-embedding.exe",
        "llama-eval-callback.exe",
        "llama-gemma3-cli.exe",
        "llama-gen-docs.exe",
        "llama-gguf-hash.exe",
        "llama-gguf-split.exe",
        "llama-gguf.exe",
        "llama-gritlm.exe",
        "llama-imatrix.exe",
        "llama-infill.exe",
        "llama-llava-cli.exe",
        "llama-llava-clip-quantize-cli.exe",
        "llama-lookahead.exe",
        "llama-lookup-create.exe",
        "llama-lookup-merge.exe",
        "llama-lookup-stats.exe",
        "llama-lookup.exe",
        "llama-minicpmv-cli.exe",
        "llama-mtmd-cli.exe",
        "llama-parallel.exe",
        "llama-passkey.exe",
        "llama-perplexity.exe",
        "llama-quantize.exe",
        "llama-qwen2vl-cli.exe",
        "llama-retrieval.exe",
        "llama-run.exe",
        "llama-save-load-state.exe",
        "llama-server.exe",
        "llama-simple-chat.exe",
        "llama-simple.exe",
        "llama-speculative-simple.exe",
        "llama-speculative.exe",
        "llama-tokenize.exe",
        "llama-tts.exe"
    ],
    "persist": "models",
    "checkver": {
        "github": "https://github.com/ggml-org/llama.cpp",
        "regex": "/releases/tag/(b[\\d]+)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://github.com/ggml-org/llama.cpp/releases/download/$version/llama-$version-bin-win-opencl-adreno-arm64.zip"
            }
        }
    }
}
